<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.exam.mapper.TeaCollectMapper" >
  <resultMap id="BaseResultMap" type="com.exam.pojo.TeaCollect" >
    <id column="question_id" property="questionId" jdbcType="INTEGER" />
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="collect_time" property="collectTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    question_id, user_id, collect_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.exam.pojo.TeaCollectExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from ex_tea_collect
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.exam.pojo.TeaCollectKey" >
    select 
    <include refid="Base_Column_List" />
    from ex_tea_collect
    where question_id = #{questionId,jdbcType=INTEGER}
      and user_id = #{userId,jdbcType=INTEGER}
  </select>
   <resultMap type="com.exam.dto.TeaCollectDto" id="teaCollectMap">
  	<result property="userId" column="user_id"/>
  	<result property="collectTime" column="collect_time"/>
  	<association property="question" javaType="com.exam.pojo.Question">
  		<id column="id" property="id" jdbcType="INTEGER" />
	    <result column="title" property="title" jdbcType="VARCHAR" />
	    <result column="content" property="content" jdbcType="VARCHAR" />
	    <result column="answer" property="answer" jdbcType="VARCHAR" />
	    <result column="keyword" property="keyword" jdbcType="VARCHAR" />
	    <result column="analysis" property="analysis" jdbcType="VARCHAR" />
	    <result column="difficulty" property="difficulty" jdbcType="INTEGER" />
	    <result column="option1" property="option1" jdbcType="VARCHAR" />
	    <result column="option2" property="option2" jdbcType="VARCHAR" />
	    <result column="option3" property="option3" jdbcType="VARCHAR" />
	    <result column="option4" property="option4" jdbcType="VARCHAR" />
	    <result column="option5" property="option5" jdbcType="VARCHAR" />
	    <result column="option6" property="option6" jdbcType="VARCHAR" />
	    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
	    <result column="creator" property="creator" jdbcType="VARCHAR" />
	    <result column="question_type" property="questionType" jdbcType="INTEGER" />
	    <result column="subject" property="subject" jdbcType="INTEGER" />
  	</association>
  	
  </resultMap>
  
  <select id="selectByUserId" resultMap="teaCollectMap">
  SELECT
		ex_tea_collect.user_id,
		ex_tea_collect.collect_time,
		ex_question.id,
		ex_question.title,
		ex_question.content,
		ex_question.answer,
		ex_question.keyword,
		ex_question.analysis,
		ex_question.difficulty,
		ex_question.option1,
		ex_question.option2,
		ex_question.option3,
		ex_question.option4,
		ex_question.option5,
		ex_question.option6,
		ex_question.create_time,
		ex_question.creator,
		ex_question.question_type,
		ex_question.`subject`
		FROM
		ex_tea_collect ,
		ex_question
		WHERE
		ex_tea_collect.question_id = ex_question.id AND
		ex_tea_collect.user_id =  #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.exam.pojo.TeaCollectKey" >
    delete from ex_tea_collect
    where question_id = #{questionId,jdbcType=INTEGER}
      and user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.exam.pojo.TeaCollectExample" >
    delete from ex_tea_collect
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.exam.pojo.TeaCollect" >
    insert into ex_tea_collect (question_id, user_id, collect_time
      )
    values (#{questionId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{collectTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.exam.pojo.TeaCollect" >
    insert into ex_tea_collect
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="questionId != null" >
        question_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="collectTime != null" >
        collect_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="questionId != null" >
        #{questionId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="collectTime != null" >
        #{collectTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.exam.pojo.TeaCollectExample" resultType="java.lang.Integer" >
    select count(*) from ex_tea_collect
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ex_tea_collect
    <set >
      <if test="record.questionId != null" >
        question_id = #{record.questionId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.collectTime != null" >
        collect_time = #{record.collectTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ex_tea_collect
    set question_id = #{record.questionId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      collect_time = #{record.collectTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.exam.pojo.TeaCollect" >
    update ex_tea_collect
    <set >
      <if test="collectTime != null" >
        collect_time = #{collectTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where question_id = #{questionId,jdbcType=INTEGER}
      and user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.exam.pojo.TeaCollect" >
    update ex_tea_collect
    set collect_time = #{collectTime,jdbcType=TIMESTAMP}
    where question_id = #{questionId,jdbcType=INTEGER}
      and user_id = #{userId,jdbcType=INTEGER}
  </update>
  
</mapper>